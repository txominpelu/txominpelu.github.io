<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Go on Txominpelu Github Pages</title>
    <link>https://txominpelu.github.com/tags/go/</link>
    <description>Recent content in Go on Txominpelu Github Pages</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Â© 2016-19 &lt;a href=&#39;https://github.com/siegerts/hugo-theme-basic&#39;&gt;Hugo Theme Basic&lt;/a&gt;. Made by &lt;a href=&#39;https://twitter.com/siegerts&#39;&gt;@siegerts&lt;/a&gt;.</copyright>
    <lastBuildDate>Mon, 10 Jun 2019 00:00:00 +0200</lastBuildDate>
    
	<atom:link href="https://txominpelu.github.com/tags/go/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Cgo</title>
      <link>https://txominpelu.github.com/post/cgo/</link>
      <pubDate>Mon, 10 Jun 2019 00:00:00 +0200</pubDate>
      
      <guid>https://txominpelu.github.com/post/cgo/</guid>
      <description>What is cgo ? Cgo is go&amp;rsquo;s FFI for C. This means that with Cgo you can call C code from Go and viceversa.
How does it work ? Two languages can talk to each other whenever they share a communication channel. For example a not so efficient implementation of FFI can be done through RPC. However both C and Go are languages that compile to machine code (in opposition to vm languages like Java).</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>https://txominpelu.github.com/post/hugo-template-primer/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0200</pubDate>
      
      <guid>https://txominpelu.github.com/post/hugo-template-primer/</guid>
      <description>Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.
This document is a brief primer on using Go templates.</description>
    </item>
    
  </channel>
</rss>